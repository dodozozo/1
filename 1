if not game:IsLoaded() then
    game.Loaded:Wait()
end;

-- Добавляем функцию идентификации для Velocity, если она отсутствует
if not identifyexecutor then
    getgenv().identifyexecutor = function() 
        return "Velocity" 
    end
end

-- Добавляем table.find, если он отсутствует
if not table.find then
    table.find = function(t, value)
        for i, v in pairs(t) do
            if v == value then
                return i
            end
        end
        return nil
    end
end

local players = game:GetService('Players')
local localPlayer = players.LocalPlayer
if (not localPlayer) then
    players:GetPropertyChangedSignal('LocalPlayer'):Wait()
    localPlayer = players.LocalPlayer
end

-- Упрощенная функция для ChatChannels без обращения к Name
local function getChatChannels()
    -- Просто создаем заглушку без сложных проверок
    local fakeChannels = Instance.new("Frame")
    fakeChannels.Name = "ChatChannels"
    fakeChannels.Visible = false
    
    -- Пытаемся найти реальный чат, но не полагаемся на него
    pcall(function()
        local playerGui = players.LocalPlayer:FindFirstChild("PlayerGui")
        if playerGui then
            local gameUI = playerGui:FindFirstChild("GameUI")
            if gameUI then
                local chat = gameUI:FindFirstChild("Chat")
                if chat then
                    fakeChannels.Parent = chat
                    return
                end
            end
        end
    end)
    
    return fakeChannels
end

-- Инициализируем после полной загрузки localPlayer
local chatChannels = getChatChannels()

local statuslist = {};
statuslist.fallensurvival = {
    name        = 'Fallen Survival';
    status      = 'Undetected';
    support     = {'Zenith'; 'Swift'; 'Wave'; 'Potassium__'; 'Volcano'; 'Velocity'};
};
statuslist.tridentsurvival = {
    name        = 'Trident Survival';
    status      = 'Use at own risk';
    support     = {'Wave'; 'AWP'; 'MacSploit'; 'Velocity'; 'Potassium'; 'Seliware'};
};

local executor = identifyexecutor and identifyexecutor() or 'Velocity';

local messagebox = messageboxasync or messagebox or function() return 6 end;
local request = request or http_request or (syn and syn.request) or (httprequest) or (fluxus and fluxus.request) or function() end;
local loadstring = loadstring;

if (type(messagebox) ~= 'function') then
    messagebox = function() return 6 end
end;

local protectedMessagebox = function(body, title, id)
    local success, output = pcall(messagebox, body, title, id);
    if (not success) then
        warn('[amongus.hook] messagebox_error - ' .. tostring(body));
        return 6;
    end;
    return output;
end;

local protectedLoad = function(url)
    local success, response = pcall(request, {Url=url, Method='GET'});
    if (not success) then
        warn('[amongus.hook] protectedLoad failed(1) - request error: ' .. tostring(url));
        return nil;
    elseif (type(response) ~= 'table' or type(response.Body) ~= 'string' or response.StatusCode ~= 200) then
        warn('[amongus.hook] protectedLoad failed(2) - bad response: ' .. tostring(url));
        return nil;
    end;
    local loader = loadstring(response.Body);
    if (not loader) then
        warn('[amongus.hook] protectedLoad failed(3) - syntax error: ' .. tostring(url));
        return nil;
    end;
    return loader();
end;

if (type(loadstring) ~= 'function') then
    loadstring = function(code) 
        return load(code);
    end
end;

if (type(request) ~= 'function') then
    request = function(options)
        local success, result = pcall(function()
            return game:HttpGetAsync(options.Url, true)
        end)
        if success and result then
            return {StatusCode = 200, Body = result}
        else
            return {StatusCode = 404, Body = ""}
        end
    end
end;

local placeid = game.PlaceId;
local dir = 'https://raw.githubusercontent.com/mainstreamed/amongus-hook/main/';

local load = function(name)
    local game = statuslist[name];
    if (game.status ~= 'Undetected') then
        local result = protectedMessagebox(game.name .. ' is Currently Marked as ' .. game.status .. '!\n\nAre You Sure You Want to Continue?', 'amongus.hook', 52);
        if result ~= 6 then
            return;
        end
    end;
    if (game.support and not table.find(game.support, executor)) then
        local result = protectedMessagebox('Unsupported Executor!\n\n' .. executor .. ' is not Officially Supported for ' .. game.name .. '\nand may have Undefined Behaviour or even result in a BAN!\n\nAre You Sure You Want to Continue?', 'amongus.hook [' .. executor .. ']', 52);
        if result ~= 6 then
            return;
        end
    end;
    protectedLoad(dir .. name .. '/main.lua');
end;

-- Безопасная загрузка скриптов
local function safeLoadGameScript()
    if (placeid == 13253735473) then
        load('tridentsurvival');
    elseif (placeid == 13800717766 or placeid == 15479377118 or placeid == 16849012343) then
        load('fallensurvival');
    else
        protectedMessagebox('This Game is Unsupported!\n\nIf you believe this is incorrect, please open a ticket in our discord! - discord.gg/2jycAcKvdw', 'amongus.hook [' .. placeid .. ']', 48);
    end
end

-- Запускаем с защитой от ошибок
local success, err = pcall(safeLoadGameScript)
if not success then
    warn('[amongus.hook] Script execution error: ' .. tostring(err))
end
